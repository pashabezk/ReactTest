{"version":3,"file":"static/js/738.eebc3097.chunk.js","mappings":"gLACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAgL,yB,0DCM1KA,EAAa,SAACC,GACnB,OACC,0BACC,SAAC,KAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,UAAW,SAACC,GAAD,OAAaA,EAAQC,SAAWC,EAAW,EAA3C,EAAhD,SACEN,EAAMO,QAIV,EAEKC,EAAU,SAACR,GAChB,OACC,gBAAKG,UAAWG,EAAhB,SACEN,EAAMS,SAGT,EAiBKC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACX,GACvB,IAAMa,GAAeC,EAAAA,EAAAA,GAAiB,KAEtC,OACC,kBAAMC,SAAUf,EAAMgB,aAAtB,WACC,0BACC,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUZ,KAAK,iBAAiBa,SAAU,CAACC,EAAAA,EAAUR,GAAeS,YAAY,0BAEnG,0BACC,yCAIH,IAiCD,EA7BgB,SAACtB,GAEhB,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC7B,EAAD,CAAYQ,KAAMqB,EAAErB,KAAiBL,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,GAArC,IACrC2B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAACvB,EAAD,CAASC,QAASsB,EAAEtB,SAAcsB,EAAE7B,GAAxC,IAW3C,OACC,iBAAKC,UAAWG,EAAhB,WACC,gBAAKH,UAAWG,EAAhB,SACEmB,KAEF,iBAAKtB,UAAWG,EAAhB,WACC,yBAAMuB,KACN,SAACnB,EAAD,CAAqBK,SAhBJ,SAACiB,GAEpBhC,EAAMiC,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,EACxB,SAgBD,E,oBChDD,GAAeC,E,QAAAA,KACdC,EAAAA,EAAAA,KAhBqB,SAACb,GACtB,MAAO,CACNC,YAAaD,EAAMC,YACnBa,OAAQd,EAAMe,KAAKD,OAEpB,IAEwB,SAACE,GACzB,MAAO,CACNN,YAAa,SAACC,GACbK,GAASC,EAAAA,EAAAA,GAAyBN,GAClC,EAEF,IAIAO,EAAAA,EAFD,CAGEC,E,kJCnBEC,EAA6B,SAACpB,GAAD,MAAY,CAC5Cc,OAAQd,EAAMe,KAAKD,OADa,EAIpBI,EAAmB,SAACG,GAAe,IAEzCC,EAFwC,0IAG7C,WACC,OAAKC,KAAK9C,MAAMqC,QAGT,SAACO,GAAD,UAAeE,KAAK9C,SAFnB,SAAC,KAAD,CAAUC,GAAI,UAGtB,KAR4C,GAEd8C,EAAAA,WAUhC,OADmCX,EAAAA,EAAAA,IAAQO,EAARP,CAAoCS,EAEvE,C","sources":["webpack://social-network/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__6qQ2D\",\"dialogsItems\":\"Dialogs_dialogsItems__o4gb3\",\"active\":\"Dialogs_active__Bl5i7\",\"messages\":\"Dialogs_messages__KU+jL\",\"message\":\"Dialogs_message__0rWSR\"};","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavLink to={\"/dialogs/\" + props.id} className={(navData) => navData.isActive ? s.active : ''}>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n\tconst maxLength100 = maxLengthCreator(100);\r\n\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea} name=\"newMessageBody\" validate={[required, maxLength100]} placeholder='Enter your message'/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\tlet messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\t// console.log(\"submit: \" + values.newMessageBody);\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t\tvalues.newMessageBody = \"\";\r\n\t}\r\n\r\n\t// if (!props.isAuth)\r\n\t// \treturn <Navigate to={\"/login\"}/>\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t\tisAuth: state.auth.isAuth\r\n\t};\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageActionCreator(newMessageBody));\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth)\r\n\t\t\t\treturn <Navigate to={\"/login\"}/>\r\n\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\treturn ConnectAuthRedirectComponent;\r\n}"],"names":["DialogItem","props","to","id","className","navData","isActive","s","name","Message","message","AddMessageFormRedux","reduxForm","form","maxLength100","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","isAuth","auth","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","Component","RedirectComponent","this","React"],"sourceRoot":""}